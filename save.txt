// @todo: Темплейт карточки

// @todo: DOM узлы

// @todo: Функция создания карточки

// @todo: Функция удаления карточки

// @todo: Вывести карточки на страницу

import "../pages/index.css";
import { initialCards } from "./cards.js";

const cardsContainer = document.querySelector(".places__list");

const editButton = document.querySelector(".profile__edit-button");
const addButton = document.querySelector(".profile__add-button");
const cardSection = document.querySelector(".places");

const formEdit = document.forms["edit-profile"];
const formCard = document.forms["new-place"];

const nameInput = document.querySelector(".profile__title");
const jobInput = document.querySelector(".profile__description");

const popupEdit = document.querySelector(".popup_type_edit");
const popupAddCard = document.querySelector(".popup_type_new-card");
const popupCard = document.querySelector(".popup_type_image");

(function () {
  popupEdit.classList.add("popup_is-animated");
  popupAddCard.classList.add("popup_is-animated");
  popupCard.classList.add("popup_is-animated");
})();

function handleDeleteCard(element) {
  element.target.parentElement.remove();
}

function handleLikeCard(element) {
  element.target.classList.toggle("card__like-button_is-active");
}

function addCard(data, onDelete, onLike) {
  const cardTemplate = document.querySelector("#card-template").content;
  const cardElement = cardTemplate.querySelector(".places__item").cloneNode(true);
  cardElement.querySelector(".card__image").setAttribute("src", data.link);
  cardElement.querySelector(".card__image").setAttribute("alt", `Картинка местности ${data.name}`);
  cardElement.querySelector(".card__title").textContent = data.name;

  cardElement
    .querySelector(".card__delete-button")
    .addEventListener("click", onDelete);
  cardElement
    .querySelector(".card__like-button")
    .addEventListener("click", onLike);
  return cardElement;
}

initialCards.forEach(function (element) {
  cardsContainer.append(addCard(element, handleDeleteCard, handleLikeCard));
});

// Функция закртия

function closeModal(evt) {
  let divPopup;

  switch (evt.type) {
    case "submit": // Закрытие по сабмит
      divPopup = evt.target.parentElement.parentElement;
      divPopup.classList.remove("popup_is-opened");
      divPopup.removeEventListener("click", closeModal);
      break;

    case "click": // Закрытие по оверлею  и крестику
      if (evt.target.classList.contains("popup")) {
        divPopup = evt.target;
        divPopup.classList.remove("popup_is-opened");
        divPopup.removeEventListener("click", closeModal);
        break;
      } else if (evt.target.classList.contains("popup__close")) {
        divPopup = evt.target.parentElement.parentElement;
        divPopup.classList.remove("popup_is-opened");
        divPopup.removeEventListener("click", closeModal);
        break;
      }
  }

  if (evt.key === "Escape") {
    try {
      document
        .querySelector(".popup_is-opened")
        .classList.remove("popup_is-opened");
    } catch {}
  }
}

// Функция возрата формы

function handleFormSubmit(evt) {
  evt.preventDefault();
  nameInput.textContent = formEdit.name.value;
  jobInput.textContent = formEdit.description.value;
  closeModal(evt);
}

// Функция возрата карты

function handleFormCard(evt) {
  evt.preventDefault();
  let name = formCard["place-name"].value;
  let link = formCard["link"].value;
  const data = {
    name,
    link,
  };
  cardsContainer.prepend(addCard(data, handleDeleteCard, handleLikeCard));
  closeModal(evt);
  formCard["place-name"].value = "";
  formCard["link"].value = "";
}

// Cлушатели

formEdit.addEventListener("submit", handleFormSubmit);
formCard.addEventListener("submit", handleFormCard);
editButton.addEventListener("click", openModal);
addButton.addEventListener("click", openModal);
cardSection.addEventListener("click", openModal);
document.addEventListener("keydown", closeModal);



function openModal(evt) {
  switch (evt.target.classList.value) {
    case "profile__edit-button":
      openEdit(popupEdit);
      break;
    case "profile__add-button":
      openAddCard(popupAddCard);
      break;
    case "card__image":
      openCard(evt, popupCard);
      break;
  }
}

function openEdit(divPopup) {
  divPopup.classList.add("popup_is-opened");
  formEdit.name.value = nameInput.textContent;
  formEdit.description.value = jobInput.textContent;
  divPopup.addEventListener("click", closeModal);
}

function openAddCard(divPopup) {
  divPopup.classList.add("popup_is-opened");
  divPopup.addEventListener("click", closeModal);
}

function openCard(evt, divPopup) {
  divPopup.classList.add("popup_is-opened");
  let image = document.querySelector(".popup__image");
  let caption = document.querySelector(".popup__caption");
  image.src = evt.target.src;
  caption.textContent = evt.target.parentElement.querySelector(".card__title").textContent;
  divPopup.addEventListener("click", closeModal);
}
